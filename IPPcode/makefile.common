INCLUDE_DIRS =
LIBRARY_DIRS =
STATIC_FLAG =

ARCH = -DNDEBUG
ADDITIONAL_FLAGS = $(OPTIMIZATION_FLAGS)
ifeq ($(dbg), 1)
	ADDITIONAL_FLAGS = $(DBG_FLAGS)
	ARCH = -DDEBUG
	STATIC_FLAG = -pg
endif

ifeq ($(g), 1)
	ADDITIONAL_FLAGS = $(OPTIMIZATION_FLAGS) $(G_FLAGS)
	ARCH = -DDEBUG
	STATIC_FLAG = -pg
endif

# -- C FLAGS   ------#
CFLAGS = $(ADDITIONAL_FLAGS) $(ARCH) $(DEF) $(INCLUDE_DIRS) -Wall -Wshadow

# --- LINKER FLAGS  -------#
LFLAGS = $(LIBRARY_DIRS) $(STATIC_FLAG)

# ---------  OBJECTS -----------#
OBJ = basic_functions.o MC.o utils.o cells.o

# ---------  EXECUTABLE -----------#
EXE = IPP

# -------- COMPILATION STEPS ------#

default: IPP generator

all: IPP generator

generator: generator.o $(OBJ)
	$(CC) generator.o $(OBJ) $(LIBRARY_DIRS) -lm -o generator

IPP: main.o $(OBJ)
	$(CC) main.o $(OBJ) $(LIBRARY_DIRS) -lm -o $(EXE)

# -------- SUFFIX RULES ------#
%.o: %.c makefile.common $(MAKEFILE_NAME)
	$(CC) $(CFLAGS) -c -o $@ $<

## --- Add dependencies by hand to make the Makefile as generic as possible --- #
utils.o: defs.h
cells.o: defs.h basic_functions.h cells.h
main.o: defs.h utils.h basic_functions.h MC.h
generator.o: defs.h utils.h basic_functions.h
MC.o: defs.h utils.h basic_functions.h MC.h


clean:
	rm -f *.o
